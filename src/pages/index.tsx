import {GetServerSideProps} from "next";
import {Button, Graph, Layout, Link, Input, Error, Profile} from "@/components";
import React, {useContext, useState} from "react";
import {NotificationsContext} from "@/pages/_app";
import moment from "moment";
import {useRouter} from "next/router";
import {useSessionContext, useSupabaseClient} from "@supabase/auth-helpers-react";
import {getUserData} from "@/utils/client/getAuthUser";

type Home = {
    null: null;
}

export default function HomePage({}: Home) {
    const router = useRouter();

    const {session} = useSessionContext();
    const supabase = useSupabaseClient()

    if (!session) {
        return (
            <Layout title={"–ì–ª–∞–≤–Ω–∞—è"}>
                <Error title={"–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã"}
                       description={"–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã."}
                       recommendations={"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞."}
                       link={{href: "/auth", text: "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", icon: {name: "sign-in", group: "solid"}}}/>
            </Layout>
        )
    }

    function getNextSalaryDate(day: number) {
        let currentDate = moment();
        currentDate.date(day);

        if (moment().date() >= day) currentDate.add(1, 'months');
        if (currentDate.isoWeekday() === 6 || currentDate.isoWeekday() === 7) currentDate.isoWeekday(5);

        const daysUntilSalary = currentDate.diff(moment(), 'days');

        return {
            date: currentDate.format('DD MMMM YYYY'),
            daysUntil: daysUntilSalary
        };
    }


    const user: any  = getUserData()

    const [statsSection, setStatsSection] = useState(1)
    const [addSection, setAddSection] = useState(1)
    const {sendNotification} = useContext(NotificationsContext)

    const [vacationStart, setVacationStart] = useState("")
    const [vacationEnd, setVacationEnd] = useState("")

    const [penaltySum, setPenaltySum] = useState(0)
    const [penaltyID, setPenaltyID] = useState(0)
    const [penaltyReason, setPenaltyReason] = useState("")

    const [workTime, setWorkTime] = useState(0)

    const [wowSegment, setWowSegment] = useState(0)

    const [premiumSum, setPremiumSum] = useState(0)
    const [premiumReason, setPremiumReason] = useState("")

    const [soldQueue, setSoldQueue] = useState(0)
    const [soldSegment, setSoldSegment] = useState(0)
    const [soldSum, setSoldSum] = useState(0)

    const [date, setDate] = useState(moment().format("YYYY-MM-DD"))

    if (!user) {
        return (<Layout>
            <Error title="–ó–∞–≥—Ä—É–∑–∫–∞" description="–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..." recommendations="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."/>
        </Layout>)
    }

    return (
        <Layout className="flex flex-row w-full h-screen items-center justify-center gap-6 flex-wrap">
            <Profile user={user}/>
            <section className="flex flex-row bg-lite-black min-w-min min-h-min rounded-xl p-6 gap-10">
                <div className="flex flex-col gap-3">
                    <p className="text-xl">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</p>
                    <Button iconName="briefcase" execute={() => setStatsSection(1)}>–í—ã—Ä–∞–±–æ—Ç–∫–∞</Button>
                    <Button iconName="money-bill-trend-up" execute={() => setStatsSection(2)}>–£—Å–ø–µ—à–∫–∏</Button>
                    <Button iconName="dollar-sign" execute={() => setStatsSection(3)}>–ó–∞—Ä–ø–ª–∞—Ç–∞</Button>
                    <Button iconName="calendar-days" execute={() => setStatsSection(4)}>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</Button>
                    <p>–ü–µ—Ä–∏–æ–¥</p>
                    <select className="bg-neutral-800 hover:bg-zinc-800 px-3 py-2 rounded-md transition-colors">
                        <option value="8.2024">–ê–≤–≥—É—Å—Ç 2024</option>
                        <option value="7.2024">–ò—é–ª—å 2024</option>
                        <option value="6.2024">–ò—é–Ω—å 2024</option>
                    </select>
                </div>
                <div className="flex flex-col gap-5">
                    {statsSection === 1 && (
                        <div className="flex flex-col min-w-min min-h-min gap-5">
                            <p>–ì—Ä–∞—Ñ–∏–∫ –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –≤—ã—Ä–∞–±–æ—Ç–∫–∏</p>
                            <div className="flex flex-col gap-5">
                                <Graph vertical={true}/>
                                <div className="flex flex-row gap-5">
                                    <div className="flex flex-col gap-2">
                                        <p>–í—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ª–∏–Ω–∏–∏</p>
                                        <p>–ö–æ–º–ø–µ—Å–∞—Ü–∏–∏</p>
                                        <p>–û—Å—Ç–∞–ª–æ—Å—å</p>
                                        <p>–ë–∞–ª–ª–æ–≤ –∑–∞ –î–∏–∞–ª–æ–≥ + –û–∂–∏–¥–∞–Ω–∏–µ</p>
                                        <p>–î–æ–ø–ª–∞—Ç–∞ –∑–∞ —Ä–∞–±–æ—Ç—É –ø–æ –≤—ã—Ö–æ–¥–Ω—ã–º</p>
                                    </div>
                                    <div className="flex flex-col gap-2">
                                        <p>56:32</p>
                                        <p>17:11</p>
                                        <p>32:29</p>
                                        <p>21 –±–∞–ª–ª</p>
                                        <p>140 –±–∞–ª–ª–æ–≤</p>
                                    </div>
                                </div>

                                <p>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –ø–ª–∞–Ω –ø–æ –≤—ã—Ä–∞–±–æ—Ç–∫–µ! üéâ</p>
                            </div>
                        </div>
                    )}
                    {statsSection === 2 && (
                        <div className="flex flex-col min-w-min min-h-min gap-5">
                            <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–∑–≤–æ–Ω–æ–≤</p>
                            <div className="flex flex-col gap-5">
                                <Graph vertical={true}/>
                                <div className="flex flex-row gap-5">
                                    <div className="flex flex-col gap-2">
                                        <p>–£—Å–ø–µ—à–Ω—ã—Ö –∑–≤–æ–Ω–∫–æ–≤</p>
                                        <p>–ù–µ—É—Å–ø–µ—à–Ω—ã—Ö –∑–≤–æ–Ω–∫–æ–≤</p>
                                        <p>–ë–∞–ª–ª–æ–≤ –∑–∞ –ø–µ—Ä–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É –º–µ—Å—è—Ü–∞</p>
                                        <p>–ë–∞–ª–ª–æ–≤ –∑–∞ –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω—É –º–µ—Å—è—Ü–∞</p>
                                        <p>–ö–æ–Ω–≤–µ—Ä—Å–∏—è</p>
                                        <p>–®—Ç—Ä–∞—Ñ–æ–≤</p>
                                    </div>
                                    <div className="flex flex-col gap-2">
                                        <p>278</p>
                                        <p>2 354</p>
                                        <p>1 456 –±–∞–ª–ª–æ–≤</p>
                                        <p>1 422 –±–∞–ª–ª–æ–≤</p>
                                        <p>11.8%</p>
                                        <p>0 [0 –±–∞–ª–ª–æ–≤]</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    )}
                    {statsSection === 3 && (
                        <div className="flex flex-col min-w-min min-h-min gap-5">
                            <p>–ó–∞—Ä–∞–±–æ—Ç–æ–∫</p>
                            <div className="flex flex-col gap-5">
                                <Graph vertical={true}/>
                                <div className="flex flex-row gap-5">
                                    <div className="flex flex-col gap-2">
                                        <p>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞</p>
                                        <p>–ó–∞—Ä–ø–ª–∞—Ç–∞</p>
                                        <p>–î–æ–ø–ª–∞—Ç–∞ –∑–∞ –î–∏–∞–ª–æ–≥ + –û–∂–∏–¥–∞–Ω–∏–µ</p>
                                        <p>–î–æ–ø–ª–∞—Ç–∞ –∑–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ</p>
                                        <p>–®—Ç—Ä–∞—Ñ—ã</p>
                                        <p>–ü—Ä–µ–º–∏—è –∑–∞ –º–µ—Å—è—Ü</p>
                                        <p>–ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –∑–∞ –æ—Ç–ø—É—Å–∫</p>
                                        <p>–ó–∞—Ä–ø–ª–∞—Ç–∞ —É—á–∏—Ç—ã–≤–∞—è –≤—Å–µ –¥–æ–ø–ª–∞—Ç—ã</p>
                                    </div>
                                    <div className="flex flex-col gap-2">
                                        <p>14 000 —Ä—É–±–ª–µ–π</p>
                                        <p>2 0000 —Ä—É–±–ª–µ–π</p>
                                        <p>1 000 —Ä—É–±–ª–µ–π</p>
                                        <p>5 000 —Ä—É–±–ª–µ–π</p>
                                        <p>0 —Ä—É–±–ª–µ–π</p>
                                        <p>5 000 —Ä—É–±–ª–µ–π</p>
                                        <p>0 —Ä—É–±–ª–µ–π</p>
                                        <p>31 000 —Ä—É–±–ª–µ–π</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    )}
                    {statsSection === 4 && (
                        <div className="flex flex-col min-w-min min-h-min gap-5">
                            <p>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</p>
                            <div className="flex flex-col gap-5">
                                <div className="flex flex-row gap-5">
                                    <div className="flex flex-col gap-2">
                                        <p>–ë–ª–∏–∂–∞–π—à–∏–π –≤—ã—Ö–æ–¥–Ω–æ–π</p>
                                        <p>–ë–ª–∏–∂–∞–π—à–∞—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞</p>
                                        <p>–ë–ª–∏–∂–∞–π—à–∞—è –∑–∞–ø–ª–∞—Ç–∞</p>
                                    </div>
                                    <div className="flex flex-col gap-2">
                                        <p>10.08.2024</p>
                                        <p>{getNextSalaryDate(22).date}</p>
                                        <p>{getNextSalaryDate(9).date}</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    )}
                </div>
            </section>
            <section className="flex flex-row bg-lite-black min-w-min min-h-min rounded-xl p-6 gap-10">
                <div className="flex flex-col gap-3">
                    <p className="text-xl">–ù–∞–∑–Ω–∞—á–∏—Ç—å</p>
                    <Button iconName="thumbs-up" iconGroup="regular" execute={() => setAddSection(1)}>–£—Å–ø–µ—à–∫–∞</Button>
                    <Button iconName="thumbs-up" iconGroup="regular" execute={() => setAddSection(2)}>–í—ã—Ä–∞–±–æ—Ç–∫—É</Button>
                    <Button iconName="handcuffs" execute={() => setAddSection(3)}>–®—Ç—Ä–∞—Ñ</Button>
                    <Button iconName="plane-departure" execute={() => setAddSection(4)}>–û—Ç–ø—É—Å–∫</Button>
                    <Button iconName="hand-holding-dollar" execute={() => setAddSection(5)}>–ü—Ä–µ–º–∏—è</Button>
                    <Button iconName="medal" execute={() => setAddSection(6)}>WOW –∑–≤–æ–Ω–æ–∫</Button>
                </div>
                <div className="flex flex-col gap-5">
                    {addSection === 1 && (
                        <div className="flex flex-col gap-5">
                            <p>–î–æ–±–∞–≤–∏—Ç—å —É—Å–ø–µ—à–∫—É</p>
                            <div className="flex flex-col gap-5">
                                <Input type="text" label="–û—á–µ—Ä–µ–¥—å" onChange={(e) => setSoldQueue(Number(e.target.value))}/>
                                <Input type="text" label="ID —Å–µ–≥–º–µ–Ω—Ç–∞"
                                       onChange={(e) => setSoldSegment(Number(e.target.value))}/>
                                <Input type="text" label="–°—É–º–º–∞ —É—Ç–∏–ª—è"
                                       onChange={(e) => setSoldSum(Number(e.target.value))}/>
                                <Input type="date" label="–î–∞—Ç–∞" onChange={(e) => setDate(e.target.value)}/>
                                <Button iconName="plus">–î–æ–±–∞–≤–∏—Ç—å</Button>
                            </div>
                        </div>
                    )}
                    {addSection === 2 && (
                        <div className="flex flex-col gap-5">
                            <p>–î–æ–±–∞–≤–∏—Ç—å –≤—ã—Ä–∞–±–æ—Ç–∫—É</p>
                            <div className="flex flex-col gap-5">
                                <Input type="text" label="–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã"
                                       onChange={(e) => setWorkTime(Number(e.target.value))}/>
                                <Input type="date" label="–î–∞—Ç–∞" onChange={(e) => setDate(e.target.value)}/>
                                <Button iconName="plus">–î–æ–±–∞–≤–∏—Ç—å</Button>
                            </div>
                        </div>
                    )}
                    {addSection === 3 && (
                        <div className="flex flex-col gap-5">
                            <p>–î–æ–±–∞–≤–∏—Ç—å —à—Ç—Ä–∞—Ñ</p>
                            <div className="flex flex-col gap-5">
                                <Input type="text" label="–°—É–º–º–∞ —à—Ç—Ä–∞—Ñ–∞ –≤ –±–∞–ª–ª–∞—Ö"
                                       onChange={(e) => setPenaltySum(Number(e.target.value))}/>
                                <Input type="text" label="ID –æ—Ü–µ–Ω–∫–∏"
                                       onChange={(e) => setPenaltyID(Number(e.target.value))}/>
                                <Input type="text" label="–ü—Ä–∏—á–∏–Ω–∞"
                                       onChange={(e) => setPenaltyReason(e.target.value)}/>
                                <Input type="date" label="–î–∞—Ç–∞" onChange={(e) => setDate(e.target.value)}/>
                                <Button iconName="plus">–î–æ–±–∞–≤–∏—Ç—å</Button>
                            </div>
                        </div>
                    )}
                    {addSection === 4 && (
                        <div className="flex flex-col gap-5">
                            <p>–î–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—É—Å–∫</p>
                            <div className="flex flex-col gap-5">
                                <Input type="date" label="–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞"
                                       onChange={(e) => setVacationStart(e.target.value)}/>
                                <Input type="date" label="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"
                                       onChange={(e) => setVacationEnd(e.target.value)}/>
                                <Button iconName="plus">–î–æ–±–∞–≤–∏—Ç—å</Button>
                            </div>
                        </div>
                    )}
                    {addSection === 5 && (
                        <div className="flex flex-col gap-5">
                            <p>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–º–∏—é</p>
                            <div className="flex flex-col gap-5">
                                <Input type="text" label="–°—É–º–º–∞ –ø—Ä–µ–º–∏–∏"
                                       onChange={(e) => setPremiumSum(Number(e.target.value))}/>
                                <Input type="text" label="–ü—Ä–∏—á–∏–Ω–∞"
                                       onChange={(e) => setPremiumReason(e.target.value)}/>
                                <Input type="date" label="–î–∞—Ç–∞" onChange={(e) => setDate(e.target.value)}/>
                                <Button iconName="plus">–î–æ–±–∞–≤–∏—Ç—å</Button>
                            </div>
                        </div>
                    )}
                    {addSection === 6 && (
                        <div className="flex flex-col gap-5">
                            <p>–î–æ–±–∞–≤–∏—Ç—å WOW –∑–≤–æ–Ω–æ–∫</p>
                            <div className="flex flex-col gap-5">
                                <Input type="text" label="ID —Å–µ–≥–º–µ–Ω—Ç–∞"
                                       onChange={(e) => setWowSegment(Number(e.target.value))}/>
                                <Input type="date" label="–î–∞—Ç–∞" onChange={(e) => setDate(e.target.value)}/>
                                <Button iconName="plus">–î–æ–±–∞–≤–∏—Ç—å</Button>
                            </div>
                        </div>
                    )}
                </div>
            </section>
        </Layout>
    )
}

export const getServerSideProps: GetServerSideProps<Home> = async (ctx) => {
    const empty = {
        props: {
            null: null,
        },
    };

    try {
        return empty;
    } catch (e) {
        return empty;
    }
};